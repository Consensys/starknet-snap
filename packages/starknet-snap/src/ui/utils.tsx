import type { TransactionRequest } from '../types/snapState';
import { ExecuteTxnUI } from './components';

/**
 * Generate the execute transaction flow interface.
 *
 * @param params - The parameters for the transaction execution flow.
 * @param params.id - The unique identifier for the transaction flow context.
 * @param params.type - The type of transaction to be executed.
 * @param params.signer - The signer for the transaction.
 * @param params.chainId - The ID of the blockchain network.
 * @param params.maxFee - The maximum allowable fee for the transaction.
 * @param params.calls - The array of calls involved in the transaction.
 * @param params.feeToken - The token used to pay transaction fees.
 * @param params.includeDeploy - Indicates if account deployment should be included in the transaction.
 * @returns The interface ID generated by the Snap request.
 */
export async function generateExecuteTxnFlow({
  id,
  type,
  signer,
  chainId,
  maxFee,
  calls,
  feeToken,
  includeDeploy,
}: TransactionRequest) {
  return await snap.request({
    method: 'snap_createInterface',
    params: {
      ui: (
        <ExecuteTxnUI
          type={type}
          signer={signer}
          chainId={chainId}
          maxFee={maxFee}
          calls={calls}
          feeToken={feeToken}
          includeDeploy={includeDeploy}
        />
      ),
      context: {
        id,
      },
    },
  });
}
